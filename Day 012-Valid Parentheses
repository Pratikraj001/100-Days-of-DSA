// ( --- https://leetcode.com/problems/valid-parentheses/ --- )

// 20. Valid Parentheses


class Solution {
public boolean isValid(String s) {
        Stack<Character> stack = new Stack<>();
		for (int i = 0; i < s.length(); i++) {
			if (s.charAt(i) == '{' || s.charAt(i) == '(' || s.charAt(i) == '[') {
				stack.push(s.charAt(i));
			} else if (!stack.isEmpty()) {
				char c = stack.pop();
				if (s.charAt(i) != getChar(c)) {
					return false;
				}
			} else {
				return false;
			}
		}
		return stack.isEmpty();
	}


	public static char getChar(char key) {
		switch (key) {
		case '{':
			return '}';
		case '(':
			return ')';
		case '[':
			return ']';
		default:
			return '.';
		}

	}
}
